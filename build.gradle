plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'

	id "me.modmuss50.mod-publish-plugin" version "0.3.5"
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+mc${project.minecraft_version}"
group = "qouteall"

repositories {
	maven {
		url "https://maven.shedaniel.me/"
	}
	maven {
		url "https://maven.terraformersmc.com/"
	}
	maven {
		name = 'Ladysnake'
		url = 'https://maven.ladysnake.org/releases'
	}
	maven { url = "https://jitpack.io" }

	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}

	// for parchment
	maven {
		url = "https://maven.parchmentmc.org"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	mappings loom.layered() {
		officialMojangMappings() {
			setNameSyntheticMembers(false)
		}
		parchment("org.parchmentmc.data:parchment-1.19.3:2022.12.18")
	}

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}") {
		exclude module: "fabric-gametest-api-v1"
		// for now, the gametest module makes client unable to login dev env server
	}
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modImplementation "maven.modrinth:modmenu:${modmenu_version}"

	// Replace modImplementation with modApi if you expose components in your own API
	modApi "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"
	// Includes Cardinal Components API as a Jar-in-Jar dependency (optional but recommended)
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"

	modApi "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}"
	// Includes Cardinal Components API as a Jar-in-Jar dependency (optional but recommended)
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}"

	modApi "dev.onyxstudios.cardinal-components-api:cardinal-components-world:${project.cca_version}"
	// Includes Cardinal Components API as a Jar-in-Jar dependency (optional but recommended)
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-world:${project.cca_version}"

}

processResources {
	inputs.property "version", project.mod_version

	filesMatching("fabric.mod.json") {
		expand "version": project.mod_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 21
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java

			artifactId = project.archives_base_name
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.

//		maven {
//			name = "GitHubPackages"
//			url = "https://maven.pkg.github.com/qouteall/GravityChanger"
//			credentials {
//				username = System.getenv("GITHUB_ACTOR")
//				password = System.getenv("GITHUB_TOKEN")
//			}
//		}
	}
}

task printClasspath {
	doLast {
		// NOTE don't forget to exclude the submod dev jar
		configurations.compileClasspath.each { println "\"" + (it.toString().replace("\\", "/")) + "\"," }
	}
}

publishMods {
	file = remapJar.archiveFile
	changelog = file("changelog.md").text
	type = ALPHA
	modLoaders.add("fabric")

	displayName = "v${project.mod_version}-mc${project.minecraft_version}"
	version = "v${project.mod_version}-mc${project.minecraft_version}"

	modrinth {
		projectId = "bqOyYdKi"
		accessToken = providers.environmentVariable("MODRINTH_TOKEN")
		minecraftVersions.add(minecraft_version)
	}
	github {
		repository = "qouteall/GravityChanger"
		accessToken = providers.environmentVariable("GITHUB_TOKEN_FOR_GRAVITY_CHANGER")
		commitish = minecraft_version // the branch name is the same as minecraft version
	}
}
